
@model EditRoleViewModel

@{
    ViewBag.Title = "Edit Role";
}

<h1>Edit Role</h1>


    <form method="post" class="mt-3">
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row">
                <label asp-for="RoleId" class="col-sm-2 col-form-label"></label>
                <input asp-for="RoleId" readonly class="form-control" />
            </div>
            <div class="form-group row">
                <label asp-for="RoleName" class="control-label"></label>
                <input asp-for="RoleName" class="form-control" />
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-sm-10">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a class="btn btn-primary" asp-action="AllRoles">Cancel</a>
                </div>
            </div>
        </div>
        <div>
            <div class="card-header">
                <h5 class="card-title">Users in this role</h5>
            </div>
            <div class="card-body">
                @if (Model.Users.Count > 0)
                {
                    foreach (var user in Model.Users)
                    {
                        <h5 class="card-title">@user</h5>
                    }
                }
                else
                {
                    <h5 class="card-title">
                        No Users
                    </h5>
                }
            </div>
            <div class="card-footer">
                <a class="btn btn-primary" asp-action="EditUsersInRole" asp-route-roleid="@Model.RoleId">Edit</a>
            </div>
        </div>
    </form>


    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
